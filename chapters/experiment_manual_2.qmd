# 実験手順書：第2回 NAPTによるインターネット接続

## 1. 実験の目的

前回の実験で構築した内部ネットワークを模擬的なインターネットに接続する。組織の出入り口となるゲートウェイにNAPT（Network Address Port Translation）を設定し、複数のプライベートIPアドレスを持つPCが一つのグローバルIPアドレスを共有してインターネットと通信する仕組みを学ぶ。今回の目標は以下の通りである。

*   NAPT（IPマスカレード）の概念と必要性を理解する。
*   `iptables` を用いてLinuxルーターにNAPTを設定できる。
*   内部ネットワークからインターネット上のサーバーへアクセスできることを確認する。
*   DNSのフォワーディング機能を設定し、内部ドメインと外部ドメインの両方を名前解決できる仕組みを構築する。
*   NAPTによるアドレス変換の様子を観察し、その動作を説明できる。

## 2. 実験環境

*   **前提条件:** 第1回の実験で構築したネットワークが、すべての設定を含めて正しく動作していること。
*   **追加の構成:** ゲートウェイ(GW)を教員が準備したインターネットセグメントに接続する。

**IPアドレス設定表（第2回追加分）**

| 機器名 | 役割 | インターフェース | IPアドレス/マスク | ゲートウェイ | DNSサーバー |
| :--- | :--- | :--- | :--- | :--- | :--- |
| GW | ゲートウェイ | WAN (eth0) | `10.0.0.1/24` | `10.0.0.254` | `10.0.0.53` |
| ExtDNS | 外部DNS | - | `10.0.0.53/24` | `10.0.0.254` | (自身) |
| ExtWeb | 外部Web | - | `10.0.0.80/24` | `10.0.0.254` | `10.0.0.53` |

*インターネット側のルーター（`10.0.0.254`）は教員が管理する。*

## 3. 実験手順

### ステップ1：ゲートウェイ(GW)のインターネット接続

GWをインターネットに接続し、自身がインターネットと通信できるように設定する。

1.  **WAN側インターフェースの設定**
    GWのWAN側インターフェース（例: `eth0`）にグローバルIPアドレスを設定する。
    ```bash
    # GWで実行
    sudo ip addr add 10.0.0.1/24 dev eth0
    ```

2.  **デフォルトゲートウェイの設定**
    GW自身にとってのインターネットへの出口を設定する。これによりGWは未知の宛先のパケットをすべてインターネット側ルーター(`10.0.0.254`)へ転送する。
    ```bash
    # GWで実行
    sudo ip route add default via 10.0.0.254
    ```

3.  **疎通確認**
    GWからインターネット上のサーバー（ExtWeb: `10.0.0.80`）へ `ping` が通ることを確認する。
    ```bash
    # GWで実行
    ping 10.0.0.80
    ```
    *この時点では、内部のクライアントPCから `ping` は通らない。戻りのパケットがクライアントPCのプライベートIPアドレスに届かないためである。*

### ステップ2：NAPT（IPマスカレード）の設定

内部ネットワークのPCがGWのグローバルIPアドレス（`10.0.0.1`）を借りてインターネットと通信できるように、`iptables` を使ってNAPTを設定する。

1.  **`iptables` ルールの追加**
    「POSTROUTING」チェーン、すなわちパケットがルーターから出ていく直前に送信元アドレスを書き換える（マスカレードする）ルールを追加する。

    ```bash
    # GWで実行
    # -t nat: natテーブルを操作する
    # -A POSTROUTING: POSTROUTINGチェーンに追加する
    # -o eth0: 出力インターフェースがeth0（WAN側）の場合
    # -j MASQUERADE: 送信元IPアドレスをeth0のIPアドレスに書き換える
    sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    ```

2.  **設定の確認**
    追加したルールを確認する。
    ```bash
    # GWで実行
    sudo iptables -t nat -L POSTROUTING -v
    ```

3.  **内部クライアントからの疎通確認**
    ClientAから再度ExtWeb (`10.0.0.80`) へ `ping` を実行する。今回は成功するはずである。
    ```bash
    # ClientAで実行
    ping 10.0.0.80
    ```

### ステップ3：DNSフォワーダーの設定

内部DNSサーバー(`IntDNS`) が、自身のゾーンに存在しないドメイン（例: `www.example.com`）に関する問い合わせを外部DNSサーバー(`ExtDNS`)へ転送するように設定する。

1.  **BIND9のオプション設定を編集する。**
    ```bash
    # IntDNSで実行
    sudo nano /etc/bind/named.conf.options
    ```

2.  **`forwarders` を追加する。**
    `options` ブロック内に以下の2行を追加または修正する。
    ```text
    options {
        directory "/var/cache/bind";

        // ↓↓↓↓ この2行を追加 ↓↓↓↓
        forwarders {
            10.0.0.53; // 外部DNSサーバーのIPアドレス
        };
        forward only;
        // ↑↑↑↑ ここまで ↑↑↑↑

        dnssec-validation auto;
        listen-on-v6 { any; };
    };
    ```

3.  **BIND9を再起動する。**
    ```bash
    # IntDNSで実行
    sudo systemctl restart bind9
    ```

### ステップ4：最終的な動作確認

ClientAから、すべてのネットワーク機能が統合的に動作することを確認する。

1.  **外部ドメインの名前解決**
    ClientAから `nslookup` で外部ドメイン（例: `www.example.com`、教員から指示されたドメイン名）が引けることを確認する。
    ```bash
    # ClientAで実行
    nslookup www.example.com
    ```
    この問い合わせは `ClientA -> R1 -> GW -> IntDNS -> GW -> ExtDNS` という経路を辿り、応答が返る。

2.  **内部ドメインの名前解決**
    引き続き、内部ドメイン（`intweb.corp.local`）も引けることを確認する。
    ```bash
    # ClientAで実行
    nslookup intweb.corp.local
    ```

3.  **Webブラウザでのアクセス**
    ClientAにGUI環境が整っていれば、Webブラウザを起動し内部Webサーバー (`http://intweb.corp.local`) と外部Webサーバー (`http://www.example.com`) の両方にアクセスできることを確認すること。

### ステップ5：NAPTの動作観察

NAPTが実際にどのように動作しているかを確認するため、GWでコネクショントラッキングテーブルを観察する。

1.  **`conntrack` ツールのインストール**
    ```bash
    # GWで実行
    sudo apt update
    sudo apt install conntrack
    ```

2.  **コネクションの監視**
    ClientAで外部のWebサイトに `ping` を実行し続けた状態で、GWで以下のコマンドを実行する。
    ```bash
    # ClientAで実行
    ping www.example.com

    # GWで実行
    sudo conntrack -L
    ```
    出力からICMP通信を探し、`src=192.168.1.10`（ClientA）のパケットが `[UNREPLIED]` または `[ASSURED]` のセクションで `src=10.0.0.1`（GWのWAN側IP）へ書き換えられている様子を確認する。これがNAPTによるアドレス変換の証拠である。

## 4. 課題

この実験結果を基に、レポートの考察の章で以下の問いに答えよ。

*   **問:** NAPTの役割とは何か。内部ネットワークのPC（`192.168.1.10`）が一つのグローバルIPアドレス（`10.0.0.1`）を使ってインターネット上のサーバーと通信できる仕組みを、`conntrack` の結果などを交えて具体的に説明せよ。
*   **問:** DNSフォワーダーを設定する理由を説明せよ。設定しなかった場合、ClientAから `www.example.com` への名前解決はどうなるか、そのプロセスを追って考察せよ。
